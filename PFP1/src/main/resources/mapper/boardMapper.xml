<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.pfp.mapper.boardMapper">
	
	<!-- 게시물 총 개수 -->
	<select id="count" resultType="int">
		select count(*) from board
	</select>
	
	<!-- 게시물 목록 -->
	<select id="list" resultType="org.pfp.dto.BoardVO">
		select boardCode, userId, content, picture, tag, good, title, regiDate
		from board
	</select>
	
	<!-- 게시물 목록 + 페이징(최신순) -->
	<select id="listPage" parameterType="hashMap" resultType="org.pfp.dto.BoardVO">
		select b.boardCode, b.userId, b.content, b.picture, b.tag, b.good, b.title, b.regiDate,
		<!-- 댓글 숫자 -->
		(select count(*) from comment where boardCode=b.boardCode) as recnt,
		<!-- 좋아요 조회 -->
		(select count(*) from likeBoard where likeCheck=1 and boardCode=b.boardCode) as likeSum
		from board b
		order by boardCode desc
		limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 게시물 목록 + 페이 + 인기순 -->
	<select id="listPopPage" parameterType="hashMap" resultType="org.pfp.dto.BoardVO">
		select b.boardCode, b.userId, b.content, b.picture, b.tag, b.good, b.title, b.regiDate,
		<!-- 댓글 숫자 -->
		(select count(*) from comment where boardCode=b.boardCode) as recnt,
		<!-- 좋아요 조회 -->
		(select count(*) from likeBoard where likeCheck=1 and boardCode=b.boardCode) as likeSum
		from board b
		order by b.good desc
		limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 게시물 목록 + 페이징 + 최신순 -->
	<select id="listNewPage" parameterType="hashMap" resultType="org.pfp.dto.BoardVO">
		select b.boardCode, b.userId, b.content, b.picture, b.tag, b.good, b.title, b.regiDate,
		<!-- 댓글 숫자 -->
		(select count(*) from comment where boardCode=b.boardCode) as recnt,
		<!-- 좋아요 조회 -->
		(select count(*) from likeBoard where likeCheck=1 and boardCode=b.boardCode) as likeSum
		from board b
		order by b.regiDate desc
		limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 게시물 등록 -->
	<insert id="resist">
		insert into 
		board(userId, content, picture, tag, good, title, regiDate)
		values(#{userId}, #{content}, #{picture}, #{tag}, 0, #{title}, SYSDATE())
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="view" parameterType="int" resultType="org.pfp.dto.BoardVO">
		select b.boardCode, b.userId, b.content, b.picture, b.tag, b.good, b.title, b.regiDate,
		<!-- 댓글 숫자 -->
		(select count(*) from comment where boardCode=b.boardCode) as recnt,
		<!-- 좋아요 조회 -->
		(select count(*) from likeBoard where likeCheck=1 and boardCode=b.boardCode) as likeSum
		from board b
		where boardCode = #{boardCode}
	</select>
	
	<!-- 블로그 댓글 작성 -->
	<insert id="registReply">
		insert into comment(boardCode, userId, commentDate, reContent)
		values (#{boardCode}, #{userId}, SYSDATE(), #{reContent})
	</insert>
	
	<!-- 블로그 댓글 목록  -->
	<select id="replyList" resultType="org.pfp.dto.ReplyVO">
		select m.nickname, r.commentDate, r.reContent, r.userId, r.commentNum, r.boardCode
		from comment r
		inner join member m
		on r.userId = m.userId
		where boardCode = #{boardCode}
	</select>
	
	<!-- 블로그 댓글 삭제  -->
	<delete id="deleteReply">
		delete 
		from comment
		where commentNum = #{commentNum}
		and userId = #{userId}
	</delete>
	
	<!-- 댓글 아이디 체크  -->
	<select id="replyUserIdCheck" resultType="String">
		select userId
		from comment
		where commentNum = #{commentNum}
	</select>
	
	<!-- 댓글 수정  -->
	<update id="modifyReply">
		update comment
		set 
		reContent = #{reContent},
		commentDate = SYSDATE()
		where commentNum = #{commentNum}
		and userId = #{userId}
	</update>
	
	<!-- 개인 블로그  -->
	<select id="personalList" resultType="org.pfp.dto.BoardVO">
	<![CDATA[
		select boardCode, userId, content, picture, tag, good, title, regiDate,
		(select count(*) from comment where boardCode=b.boardCode) as recnt
		from board b
		where userId = #{userId} and boardCode>0
		order by boardCode desc, regiDate desc
		limit 0,12;
		]]>
	</select>
	
	<!-- 무한 스크롤 다운  -->
	<select id="infiniteScrollDown" resultType="org.pfp.dto.BoardVO">
	<![CDATA[
		select select boardCode, userId, content, picture, tag, good, title, regiDate
		from board
		where boardCode <= #{boardCode}
		and boardCode > #{boardCode} -12
		order by boardCode desc, regiDate desc
	]]>
	</select>
	
	<!-- 게시글 추천 여부 -->
	<select id="likeCheck" parameterType="map" resultType="int">
		select likeCheck from likeBoard 
		where boardCode=#{boardCode} and
		userId = #{userId} and
		likeCheck = 1
	</select>
	<!-- 게시물 좋아요 추가 -->
	<insert id="likeAdd" parameterType="map">
		insert into likeBoard(boardCode, userId, likeCheck)
		value(#{boardCode},#{userId}, 1)
	</insert>
	
	
	<!-- 게시물 좋아요 감소 -->
	<update id="likeCancel" parameterType="map">
		update likeBoard
		set
		likeCheck = 0
		where boardCode = #{boardCode} and userId = #{userId}
	</update>
	<!--  게시글 추천 수 -->
	<select id="likeView" parameterType="int" resultType="int">
		select count(*) from likeBoard where likeCheck=1 and boardCode=#{boardCode}
	</select>
</mapper>